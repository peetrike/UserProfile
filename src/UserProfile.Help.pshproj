<?xml version="1.0"?>
<ModuleObject xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" fVersion="1.1" type="Manifest" mclass="External" useSupports="false">
  <Name>UserProfile</Name>
  <Version>1.0</Version>
  <Description />
  <HasManifest>false</HasManifest>
  <OverridePostCount>false</OverridePostCount>
  <FetchPostCount xsi:nil="true" />
  <Cmdlets>
    <CmdletObject verb="Get" noun="ProfileOwner">
      <Name>Get-ProfileOwner</Name>
      <GeneralHelp>
        <Synopsis>Resolves user profile owner SID to user object.</Synopsis>
        <Description>The Get-ProfileOwner cmdlet resolves one or more user profile owners to user account objects.</Description>
        <Notes>The Microsoft.Management.Infrastructure.CimInstance object is a wrapper class that displays Windows Management Instrumentation (WMI) objects. The path after the pound sign (#) provides the namespace and class name for the underlying WMI object.</Notes>
        <InputType>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_UserProfile</InputType>
        <InputUrl>http://msdn.microsoft.com/library/ee886409</InputUrl>
        <InputTypeDescription>User Profile CIM object</InputTypeDescription>
        <ReturnType>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_UserAccount;Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_SystemAccount</ReturnType>
        <ReturnUrl>http://msdn.microsoft.com/library/aa394507;http://msdn.microsoft.com/library/aa394466</ReturnUrl>
        <ReturnTypeDescription>User Account CIM object;System Account CIM object</ReturnTypeDescription>
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="BySID" Params="SID CimSession ThrottleLimit AsJob Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Get-ProfileOwner [-SID] &lt;String[]&gt; [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="String[]" varLen="true" required="true" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="true" isPos="true" pos="0" globbing="false">
          <Name>SID</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies profile owner Security ID (SID).</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="CimSession[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>CimSession</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Session</string>
          </Aliases>
          <Description>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession or Get-CimSession cmdlet. The default is the current session on the local computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ThrottleLimit</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of 0 is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AsJob</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Runs the cmdlet as a background job. Use this parameter to run commands that take a long time to complete.  The cmdlet immediately returns an object that represents the job and then displays the command prompt. You can continue to work in the session while the job completes.  To manage the job, use the *-Job cmdlets. To get the job results, use the Receive-Job cmdlet.  For more information about Windows PowerShell® background jobs, see about_Jobs.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-UserProfile | Get-ProfileOwner</Cmd>
          <Description>Resolves user profile owners into user accounts</Description>
          <Output>Caption                       Domain                        Name                          SID
-------                       ------                        ----                          ---
PWNOTE\NETWORK SERVICE        PWNOTE                        NETWORK SERVICE               S-1-5-20
PWNOTE\SYSTEM                 PWNOTE                        SYSTEM                        S-1-5-18
PWNOTE\LOCAL SERVICE          PWNOTE                        LOCAL SERVICE                 S-1-5-19
  . . .
</Output>
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Get-ProfileOwner -SID S-1-5-20</Cmd>
          <Description>This example gets user account details using specific SID</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 3</Name>
          <Cmd>Get-Item c:\users\someuser |
  Select-Object -ExpandProperty FullName |
  Get-UserProfile |
  Get-ProfileOwner</Cmd>
          <Description>This example takes user profile directory by name and retrieves that profile's owner details.</Description>
          <Output />
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-UserProfile</LinkText>
          <LinkUrl />
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Get" noun="UserProfile">
      <Name>Get-UserProfile</Name>
      <GeneralHelp>
        <Synopsis>Gets user profile objects from local or remote systems.</Synopsis>
        <Description>The Get-UserProfile cmdlet retrieves the specified user profile and its properties. If you do not specify a profile name, the cmdlet returns a list of all user profiles.</Description>
        <Notes>The Microsoft.Management.Infrastructure.CimInstance object is a wrapper class that displays Windows Management Instrumentation (WMI) objects. The path after the pound sign (#) provides the namespace and class name for the underlying WMI object.</Notes>
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_UserProfile</ReturnType>
        <ReturnUrl>http://msdn.microsoft.com/library/ee886409</ReturnUrl>
        <ReturnTypeDescription>User Profile CIM object</ReturnTypeDescription>
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="ByPath" Params="LocalPath Before Status Loaded Roaming Special CimSession ThrottleLimit AsJob Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable" />
        <CommandParameterSetInfo2 Name="BySID" Params="SID Before Status Loaded Roaming Special CimSession ThrottleLimit AsJob Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Syntax>
        <string>Get-UserProfile [-LocalPath &lt;String[]&gt;] [-Before &lt;DateTime&gt;] [-Status &lt;Status[]&gt;] [-Loaded &lt;Boolean[]&gt;] [-Roaming &lt;Boolean[]&gt;] [-Special &lt;Boolean[]&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</string>
        <string>Get-UserProfile -SID &lt;String[]&gt; [-Before &lt;DateTime&gt;] [-Status &lt;Status[]&gt;] [-Loaded &lt;Boolean[]&gt;] [-Roaming &lt;Boolean[]&gt;] [-Special &lt;Boolean[]&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="true">
          <Name>LocalPath</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Path</string>
          </Aliases>
          <Description>Specifies a path to one or more user profiles. Wildcards are permitted.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="true" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="true" isPos="false" pos="named" globbing="true">
          <Name>SID</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies profile owner Security ID (SID).  Wildcards are permitted.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Status[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Status</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the status of the user profiles being enumerated.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Boolean[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Loaded</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies whether the returned user profiles should include currently loaded ones (or not)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Boolean[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Roaming</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies whether the returned user profiles should include roaming profiles (or not)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Boolean[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Special</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies whether the returned user profiles should include these that are owned by a special system service.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="CimSession[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>CimSession</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Session</string>
          </Aliases>
          <Description>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession or Get-CimSession cmdlet. The default is the current session on the local computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ThrottleLimit</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of 0 is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AsJob</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of 0 is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="DateTime" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Before</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Gets only the user profiles that has been loaded before the specified date and time. Enter a DateTime object, such as the one returned by the Get-Date cmdlet.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-UserProfile</Cmd>
          <Description>This example receives all user profiles from local computer</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>$loadedBefore = (Get-Date).AddDays(-90)
Get-Userprofile -Before $loadedBefore</Cmd>
          <Description>This example retreives all user profiles that are not used for 3 months (90 days)</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 3</Name>
          <Cmd>Get-AdUser Joe | Get-UserProfile</Cmd>
          <Description>This example retrieves the AD user Joe's profile.</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 4</Name>
          <Cmd>Get-CimInstance Win32_UserAccount "name='localuser'" | Get-UserProfile</Cmd>
          <Description>This example retrieves local user's profile.</Description>
          <Output />
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Win32_UserProfile</LinkText>
          <LinkUrl>http://msdn.microsoft.com/library/ee886409</LinkUrl>
        </RelatedLink>
        <RelatedLink>
          <LinkText>Remove-UserProfile</LinkText>
          <LinkUrl />
        </RelatedLink>
        <RelatedLink>
          <LinkText>Get-ProfileOwner</LinkText>
          <LinkUrl />
        </RelatedLink>
        <RelatedLink>
          <LinkText>Set-ProfileOwner</LinkText>
          <LinkUrl />
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Remove" noun="UserProfile">
      <Name>Remove-UserProfile</Name>
      <GeneralHelp>
        <Synopsis>Deletes specified user profiles.</Synopsis>
        <Description>The Remove-UserProfile cmdlet removes specified user profiles from the system.</Description>
        <Notes />
        <InputType>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_UserProfile</InputType>
        <InputUrl>http://msdn.microsoft.com/library/ee886409</InputUrl>
        <InputTypeDescription>User Profile CIM object</InputTypeDescription>
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="ByPath" Params="LocalPath Before Status Loaded Roaming Special CimSession ThrottleLimit AsJob PassThru Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="BySID" Params="SID Before Status Loaded Roaming Special CimSession ThrottleLimit AsJob PassThru Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="InputObject (cdxml)" Params="InputObject CimSession ThrottleLimit AsJob PassThru Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Syntax>
        <string>Remove-UserProfile -LocalPath &lt;String[]&gt; [-Before &lt;DateTime&gt;] [-Status &lt;Status[]&gt;] [-Loaded &lt;Boolean[]&gt;] [-Roaming &lt;Boolean[]&gt;] [-Special &lt;Boolean[]&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]</string>
        <string>Remove-UserProfile -SID &lt;String[]&gt; [-Before &lt;DateTime&gt;] [-Status &lt;Status[]&gt;] [-Loaded &lt;Boolean[]&gt;] [-Roaming &lt;Boolean[]&gt;] [-Special &lt;Boolean[]&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]</string>
        <string>Remove-UserProfile -InputObject &lt;CimInstance[]&gt; [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="String[]" varLen="true" required="true" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="true">
          <Name>LocalPath</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Path</string>
          </Aliases>
          <Description>Specifies a path to one or more user profiles. Wildcards are permitted.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="true" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="true" isPos="false" pos="named" globbing="true">
          <Name>SID</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies profile owner Security ID (SID).  Wildcards are permitted.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Status[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Status</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the status of the user profiles being enumerated.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Boolean[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Loaded</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies whether the returned user profiles should include currently loaded ones (or not)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Boolean[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Roaming</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies whether the returned user profiles should include roaming profiles (or not)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Boolean[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Special</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies whether the returned user profiles should include these that are owned by a special system service.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="CimSession[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>CimSession</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Session</string>
          </Aliases>
          <Description>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession or Get-CimSession cmdlet. The default is the current session on the local computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ThrottleLimit</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of 0 is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AsJob</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of 0 is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>PassThru</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies that the cmdlet should output an object representing a user profile.  By default, this cmdlet does not generate any output.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description>Shows what would happen if the cmdlet runs. The cmdlet is not run.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description>Prompts you for confirmation before running the cmdlet.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="CimInstance[]" varLen="true" required="true" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.PSTypeNameAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the user profile to remove.  Enter a User Profile CIM object, which you can get by using the Get-UserProfile cmdlet.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="DateTime" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Before</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Gets only the user profiles that has been loaded before the specified date and time. Enter a DateTime object, such as the one returned by the Get-Date cmdlet.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>$account = Get-ADUser joe
Remove-UserProfile -SID $account.SID</Cmd>
          <Description>This example removes profile for user account Joe</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Remove-UserProfile -Status Corrupt</Cmd>
          <Description>This example removes all user profiles which are corrupt and cannot be loaded.</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 3</Name>
          <Cmd>Get-UserProfile -Before (Get-Date).AddDays(-90) | Remove-UserProfile</Cmd>
          <Description>This example finds all user profiles that are not used for 3 moths (90 days) and removes them.</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 4</Name>
          <Cmd>Get-UserProfile -Roaming $true -Loaded $false | Remove-UserProfile</Cmd>
          <Description>This example removes all local copies of roaming user profiles that are not currently loaded.</Description>
          <Output />
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-UserProfile</LinkText>
          <LinkUrl />
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Set" noun="ProfileOwner">
      <Name>Set-ProfileOwner</Name>
      <GeneralHelp>
        <Synopsis>Changes user profile owner.</Synopsis>
        <Description>The Set-ProfileOwner cmdlet replaces owner of one or more user profiles.</Description>
        <Notes />
        <InputType>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_UserProfile</InputType>
        <InputUrl>http://msdn.microsoft.com/library/ee886409</InputUrl>
        <InputTypeDescription>User Profile CIM object</InputTypeDescription>
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="ByPath" Params="LocalPath SID Flags CimSession ThrottleLimit AsJob PassThru Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="InputObject (cdxml)" Params="InputObject SID Flags CimSession ThrottleLimit AsJob PassThru Verbose Debug ErrorAction WarningAction ErrorVariable WarningVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Syntax>
        <string>Set-ProfileOwner -LocalPath &lt;String[]&gt; -SID &lt;String&gt; [-Flags &lt;Flags&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]</string>
        <string>Set-ProfileOwner -InputObject &lt;CimInstance[]&gt; -SID &lt;String&gt; [-Flags &lt;Flags&gt;] [-CimSession &lt;CimSession[]&gt;] [-ThrottleLimit &lt;Int32&gt;] [-AsJob] [-PassThru] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <Parameters>
        <ParameterDescription type="CimInstance[]" varLen="true" required="true" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.PSTypeNameAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the user profile to process.  Enter a User Profile CIM object, which you can get by using the Get-UserProfile cmdlet.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="true" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SID</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>NewSID</string>
          </Aliases>
          <Description>Specifies new owner's Security ID (SID) for user profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Flags" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Flags</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies, whether do you want to overwrite new owner's existing profile.</Description>
          <DefaultValue>1</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="CimSession[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>CimSession</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullOrEmptyAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Session</string>
          </Aliases>
          <Description>Runs the cmdlet in a remote session or on a remote computer. Enter a computer name or a session object, such as the output of a New-CimSession or Get-CimSession cmdlet. The default is the current session on the local computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ThrottleLimit</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of 0 is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AsJob</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies the maximum number of concurrent operations that can be established to run the cmdlet. If this parameter is omitted or a value of 0 is entered, then Windows PowerShell® calculates an optimum throttle limit for the cmdlet based on the number of CIM cmdlets that are running on the computer. The throttle limit applies only to the current cmdlet, not to the session or to the computer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>PassThru</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Specifies that the cmdlet should output an object representing a user profile.  By default, this cmdlet does not generate any output.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description>Shows what would happen if the cmdlet runs. The cmdlet is not run.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description>Prompts you for confirmation before running the cmdlet.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="true" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="true" isPos="false" pos="named" globbing="false">
          <Name>LocalPath</Name>
          <Attributes>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
            <string>System.Management.Automation.ValidateNotNullAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Path</string>
          </Aliases>
          <Description>Specifies a path to one or more user profiles. Wildcards are permitted.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>$oldOwner = Get-AdUser John
$newOwner = Get-AdUser Joe
Get-UserProfile -SID $oldOwner.SID | Set-ProfileOwner -SID $newOwner.SID</Cmd>
          <Description>This example takes user profile of John and replaces the owner with user Joe.</Description>
          <Output />
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-UserProfile</LinkText>
          <LinkUrl />
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
  </Cmdlets>
</ModuleObject>